/*
 * Copyright (c) Microsoft Corporation. All rights reserved.
 * Licensed under the MIT License.
 */

apply plugin: 'maven-publish'

task androidJavadocs(type: Javadoc) {
    failOnError false
    source = android.sourceSets.main.java.sourceFiles

    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))

}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    from androidJavadocs.destinationDir
    classifier = 'javadoc'
}

task androidSourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}


publishing {
    publications {
        magnifier(MavenPublication) {
            afterEvaluate {
                groupId project.POM_GROUP_ID
                artifactId project.POM_ARTIFACT_ID
                version System.getProperty("versionName", project.VERSION_NAME)
                artifact bundleReleaseAar
                artifact androidJavadocsJar
                artifact androidSourcesJar
            }

            pom.withXml {
                def dependenciesNode = asNode().appendNode('dependencies')

                configurations.implementation.getAllDependencies().each { Dependency dep ->
                    if (dep.group == null
                            || dep.version == null
                            || dep.name == null
                            || dep.name == "unspecified") {
                        return // ignore invalid dependencies
                    }

                    def dependencyNode = dependenciesNode.appendNode('dependency')
                    dependencyNode.appendNode('groupId', dep.group)
                    dependencyNode.appendNode('artifactId', dep.name)
                    dependencyNode.appendNode('version', dep.version)

                    if (!dep.transitive) {
                        // If this dependency is transitive, we should force exclude
                        // all its dependencies them from the POM
                        def exclusionNode = dependencyNode.appendNode('exclusions').appendNode('exclusion')
                        exclusionNode.appendNode('groupId', '*')
                        exclusionNode.appendNode('artifactId', '*')
                    } else if (!dep.properties.excludeRules.empty) {
                        // Otherwise add specified exclude rules
                        def exclusionsNode = dependencyNode.appendNode('exclusions')
                        dep.properties.excludeRules.each { ExcludeRule rule ->
                            def exclusionNode = exclusionsNode.appendNode('exclusion')
                            exclusionNode.appendNode('groupId', rule.group ?: '*')
                            exclusionNode.appendNode('artifactId', rule.module ?: '*')
                        }
                    }
                }
            }
        }
    }

    repositories {
        maven {
            url 'https://office.pkgs.visualstudio.com/_packaging/OutlookMobile/maven/v1'
            credentials {
                // TODO: replace this local.properties after set up pipelines in VSTS
                Properties properties = new Properties()
                properties.load(project.rootProject.file('local.properties').newDataInputStream())
                username = properties.getProperty('vsoUserName')
                password = properties.getProperty('vsoPassword')
            }
        }
    }
}

